{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/sayak/Documents/Web development/Project_NextJS/event-app/pages/events/[...slug].js\",\n    _s = $RefreshSig$();\n\nimport { useRouter } from \"next/router\";\nimport { getFilteredEvents } from \"../../dummy-data.js\";\nimport EventList from \"../../components/events/EventList.js\";\n\nfunction FilteredEvents() {\n  _s();\n\n  var router = useRouter();\n  var filteredDate = router.query.slug;\n\n  if (!filteredDate) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"center\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n\n  var filteredYear = +filteredDate[0];\n  var filteredMonth = +filteredDate[1];\n\n  if (isNaN(filteredMonth) || isNaN(filteredYear) || filteredMonth < 1 || filteredMonth > 12) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"center\",\n      children: \"Wrong filters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n\n  var eventsFiltered = getFilteredEvents({\n    year: filteredYear,\n    month: filteredMonth\n  });\n\n  if (!eventsFiltered || eventsFiltered.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"center\",\n      children: \"No filtered events found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(EventList, {\n      items: eventsFiltered\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FilteredEvents, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = FilteredEvents;\nexport default FilteredEvents;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilteredEvents\");","map":{"version":3,"sources":["/home/sayak/Documents/Web development/Project_NextJS/event-app/pages/events/[...slug].js"],"names":["useRouter","getFilteredEvents","EventList","FilteredEvents","router","filteredDate","query","slug","filteredYear","filteredMonth","isNaN","eventsFiltered","year","month","length"],"mappings":";;;;;AAAA,SAAQA,SAAR,QAAwB,aAAxB;AACA,SAAQC,iBAAR,QAAgC,qBAAhC;AACA,OAAOC,SAAP,MAAsB,sCAAtB;;AACA,SAASC,cAAT,GAAyB;AAAA;;AACvB,MAAMC,MAAM,GAACJ,SAAS,EAAtB;AACA,MAAMK,YAAY,GAACD,MAAM,CAACE,KAAP,CAAaC,IAAhC;;AACA,MAAG,CAACF,YAAJ,EACA;AACE,wBAAO;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,MAAMG,YAAY,GAAC,CAACH,YAAY,CAAC,CAAD,CAAhC;AACA,MAAMI,aAAa,GAAC,CAACJ,YAAY,CAAC,CAAD,CAAjC;;AACA,MAAGK,KAAK,CAACD,aAAD,CAAL,IAAwBC,KAAK,CAACF,YAAD,CAA7B,IAA+CC,aAAa,GAAC,CAA7D,IAAkEA,aAAa,GAAC,EAAnF,EACA;AACE,wBAAO;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAEH,MAAME,cAAc,GAACV,iBAAiB,CAAC;AACrCW,IAAAA,IAAI,EAAEJ,YAD+B;AAErCK,IAAAA,KAAK,EAAEJ;AAF8B,GAAD,CAAtC;;AAKA,MAAG,CAACE,cAAD,IAAmBA,cAAc,CAACG,MAAf,KAAwB,CAA9C,EACA;AACE,wBAAO;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAIC,sBACE;AAAA,2BACF,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEH;AAAlB;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA/BQR,c;UACMH,S;;;KADNG,c;AAgCT,eAAeA,cAAf","sourcesContent":["import {useRouter} from \"next/router\";\nimport {getFilteredEvents} from \"../../dummy-data.js\";\nimport EventList from \"../../components/events/EventList.js\";\nfunction FilteredEvents(){\n  const router=useRouter();\n  const filteredDate=router.query.slug;\n  if(!filteredDate)\n  {\n    return <p className=\"center\">Loading...</p>\n  }\n  const filteredYear=+filteredDate[0];\n  const filteredMonth=+filteredDate[1];\n  if(isNaN(filteredMonth) || isNaN(filteredYear) || filteredMonth<1 || filteredMonth>12)\n  {\n    return <p className=\"center\">Wrong filters</p>\n  }\n\nconst eventsFiltered=getFilteredEvents({\n  year: filteredYear,\n  month: filteredMonth\n});\n\nif(!eventsFiltered || eventsFiltered.length===0)\n{\n  return <p className=\"center\">No filtered events found</p>\n}\n\n\n\n  return (\n    <div>\n  <EventList items={eventsFiltered} />\n    </div>\n  );\n}\nexport default FilteredEvents;\n"]},"metadata":{},"sourceType":"module"}