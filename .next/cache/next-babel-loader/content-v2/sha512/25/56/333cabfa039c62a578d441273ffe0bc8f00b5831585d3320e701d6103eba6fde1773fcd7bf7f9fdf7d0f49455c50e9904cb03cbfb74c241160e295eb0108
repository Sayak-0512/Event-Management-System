{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sayak/Documents/Web development/Project_NextJS/event-app/pages/events/[...slug].js\";\nimport { useRouter } from \"next/router\";\nimport { Fragment } from \"react\";\nimport { getFilteredEvents } from \"../../dummy-data.js\";\nimport EventList from \"../../components/events/EventList.js\";\nimport ResultsTitle from \"../../components/events/results-title\";\nimport ErrorAlert from \"../../components/UI/error-alert\";\nimport Button from \"../../components/UI/Button\";\n\nfunction FilteredEvents() {\n  const router = useRouter();\n  const filteredDate = router.query.slug;\n\n  if (!filteredDate) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"center\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n\n  const filteredYear = +filteredDate[0];\n  const filteredMonth = +filteredDate[1];\n\n  if (isNaN(filteredMonth) || isNaN(filteredYear) || filteredMonth < 1 || filteredMonth > 12) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ErrorAlert, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"center\",\n          children: \"Wrong filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Show All Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n\n  const eventsFiltered = getFilteredEvents({\n    year: filteredYear,\n    month: filteredMonth\n  });\n\n  if (!eventsFiltered || eventsFiltered.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ErrorAlert, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"center\",\n          children: \"No filtered events found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Show All Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 10\n    }, this);\n  }\n\n  const date = new Date(filteredYear, filteredMonth - 1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ResultsTitle, {\n      date: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(EventList, {\n      items: eventsFiltered\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\nexport default FilteredEvents;","map":{"version":3,"sources":["/home/sayak/Documents/Web development/Project_NextJS/event-app/pages/events/[...slug].js"],"names":["useRouter","Fragment","getFilteredEvents","EventList","ResultsTitle","ErrorAlert","Button","FilteredEvents","router","filteredDate","query","slug","filteredYear","filteredMonth","isNaN","eventsFiltered","year","month","length","date","Date"],"mappings":";;AAAA,SAAQA,SAAR,QAAwB,aAAxB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAAQC,iBAAR,QAAgC,qBAAhC;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;AACA,SAASC,cAAT,GAAyB;AACvB,QAAMC,MAAM,GAACR,SAAS,EAAtB;AACA,QAAMS,YAAY,GAACD,MAAM,CAACE,KAAP,CAAaC,IAAhC;;AACA,MAAG,CAACF,YAAJ,EACA;AACE,wBAAO;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAED;;AACD,QAAMG,YAAY,GAAC,CAACH,YAAY,CAAC,CAAD,CAAhC;AACA,QAAMI,aAAa,GAAC,CAACJ,YAAY,CAAC,CAAD,CAAjC;;AACA,MAAGK,KAAK,CAACD,aAAD,CAAL,IAAwBC,KAAK,CAACF,YAAD,CAA7B,IAA+CC,aAAa,GAAC,CAA7D,IAAkEA,aAAa,GAAC,EAAnF,EACA;AACE,wBAAO,QAAC,QAAD;AAAA,8BACP,QAAC,UAAD;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADO,eAIL;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAJK;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAQD;;AAEH,QAAME,cAAc,GAACb,iBAAiB,CAAC;AACrCc,IAAAA,IAAI,EAAEJ,YAD+B;AAErCK,IAAAA,KAAK,EAAEJ;AAF8B,GAAD,CAAtC;;AAKA,MAAG,CAACE,cAAD,IAAmBA,cAAc,CAACG,MAAf,KAAwB,CAA9C,EACA;AACE,wBAAO,QAAC,QAAD;AAAA,8BACP,QAAC,UAAD;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADO,eAIL;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAJK;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAQD;;AACD,QAAMC,IAAI,GAAC,IAAIC,IAAJ,CAASR,YAAT,EAAuBC,aAAa,GAAC,CAArC,CAAX;AAGE,sBACE;AAAA,4BACA,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEM;AAApB;AAAA;AAAA;AAAA;AAAA,YADA,eAEF,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEJ;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFE;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;AACD,eAAeR,cAAf","sourcesContent":["import {useRouter} from \"next/router\";\nimport {Fragment} from \"react\";\nimport {getFilteredEvents} from \"../../dummy-data.js\";\nimport EventList from \"../../components/events/EventList.js\";\nimport ResultsTitle from \"../../components/events/results-title\";\nimport ErrorAlert from \"../../components/UI/error-alert\";\nimport Button from \"../../components/UI/Button\";\nfunction FilteredEvents(){\n  const router=useRouter();\n  const filteredDate=router.query.slug;\n  if(!filteredDate)\n  {\n    return <p className=\"center\">Loading...</p>\n\n  }\n  const filteredYear=+filteredDate[0];\n  const filteredMonth=+filteredDate[1];\n  if(isNaN(filteredMonth) || isNaN(filteredYear) || filteredMonth<1 || filteredMonth>12)\n  {\n    return <Fragment>\n    <ErrorAlert>\n      <p className=\"center\">Wrong filters</p>\n      </ErrorAlert>\n      <div className='center'>\n      <Button>Show All Events</Button>\n      </div>\n      </Fragment>\n  }\n\nconst eventsFiltered=getFilteredEvents({\n  year: filteredYear,\n  month: filteredMonth\n});\n\nif(!eventsFiltered || eventsFiltered.length===0)\n{\n  return <Fragment>\n  <ErrorAlert>\n    <p className=\"center\">No filtered events found</p>\n    </ErrorAlert>\n    <div className='center'>\n    <Button>Show All Events</Button>\n    </div>\n    </Fragment>\n}\nconst date=new Date(filteredYear, filteredMonth-1);\n\n\n  return (\n    <div>\n    <ResultsTitle date={date}/>\n  <EventList items={eventsFiltered} />\n    </div>\n  );\n}\nexport default FilteredEvents;\n"]},"metadata":{},"sourceType":"module"}